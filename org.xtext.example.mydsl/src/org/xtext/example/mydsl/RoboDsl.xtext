// automatically generated by Xtext
grammar org.xtext.example.robodsl.RoboDsl with org.eclipse.xtext.common.Terminals

//import "http://www.example.org/roboEMF" 
import "platform:/resource/roboEMF/model/roboEMF.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

EScript returns EScript: {EScript}
	'Script'
	(Name=EString)
	'runs'
	'as'
	(mainbody=MainBody)
	'end';

Command:
	EComment | IfStatement | WhileStatement | RepeateStatement | 
	TurnLeftCmd | TraceCmd | DropCmd | StepCmd | PickCmd | DropMarkCmd | 
	PickMarkCmd | DestroyWallCmd | BuildWallCmd
	;// | RoutineDecl | RoutineCall;

MainBody returns MainBody: {MainBody}
	(command+=Command ( command+=Command)* )
	;
	
SubBody returns SubBody: {SubBody}
	command+=Command (command+=Command)* 
	;

EComment returns EComment: {EComment}
	comment=COMMENTSTRING
	;

TurnLeftCmd returns TurnLeftCmd: {TurnLeftCmd}
	'turnLeft'
	;

TraceCmd returns TraceCmd: {TraceCmd}
	'trace' trace=TRACESTRING
	;

DropCmd returns DropCmd: {DropCmd}
	'drop'
	;

StepCmd returns StepCmd: {StepCmd}
	'step'
	;

PickCmd returns PickCmd: {PickCmd}
	'pick'
	;

DropMarkCmd returns DropMarkCmd: {DropMarkCmd}
	'dropMark'
	location=Location
	;

PickMarkCmd returns PickMarkCmd: {PickMarkCmd}
	'pickMark'
	location=Location
	;

DestroyWallCmd returns DestroyWallCmd: {DestroyWallCmd}
	'destroyWall'
	location=Location
	;

BuildWallCmd returns BuildWallCmd: {BuildWallCmd}
	'buildWall'
	location=Location
	;
	
Location returns Location: {Location}
	'row:' row=EInteger 'col:' col=EInteger
	;
	
IfStatement returns IfStatement: {IfStatement}
	'if'
	conditionmodel=ConditionModel
	'do'
	subbody=SubBody
	('else' 'do' elsebody=SubBody)?
	'end'
	;

WhileStatement returns WhileStatement: {WhileStatement}
	'while'
	conditionmodel=ConditionModel
	'do' 
	subbody=SubBody
	'end';

RepeateStatement returns RepeateStatement: {RepeateStatement}
	'Repeat'
	count=EInteger
	'times'
	subbody=SubBody
	'end';
	
ConditionModel: OrCond;
  

OrCond:
	lhs=AndCond ( 'or' rhs=OrCond)?;

AndCond:
	lhs=NotCond ( 'and' rhs=AndCond)?;

NotCond:
	(not?='not')? brackets=BracketsCond;

BracketsCond:
	'(' orcond=OrCond ')' | condition=Condition;
	
	
Condition returns Condition:  Full | Mark | WallAhead | Heading;
	

Full  returns Condition:{Condition}'full';

Mark  returns Condition:{Condition}'mark';

WallAhead  returns Condition:{Condition}'wall' 'ahead';
	
Heading returns Condition:{Condition}'heading' ('north' | 'east' | 'south' | 'west');

EInteger returns ecore::EInt:
	INT;
	
	EString returns ecore::EString:
	STRING | ID;
	
	terminal TRACESTRING:
	'"' (!'"')* '"';
	
	terminal COMMENTSTRING:
	'#'(!'\n')* '\n';
	
	
	/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.

 
 RoutineDecl returns RoutineDecl: {RoutineDecl}
	'routine'
	name=EString
	'means'
	subbody=SubBody
	'end'
	;
	
RoutineCall: decl=[RoutineDecl]; */
