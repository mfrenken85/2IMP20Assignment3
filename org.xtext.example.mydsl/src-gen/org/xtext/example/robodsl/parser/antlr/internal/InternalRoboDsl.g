/*
 * generated by Xtext 2.11.0
 */
grammar InternalRoboDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.robodsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.robodsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.robodsl.services.RoboDslGrammarAccess;

}

@parser::members {

 	private RoboDslGrammarAccess grammarAccess;

    public InternalRoboDslParser(TokenStream input, RoboDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EScript";
   	}

   	@Override
   	protected RoboDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEScript
entryRuleEScript returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEScriptRule()); }
	iv_ruleEScript=ruleEScript
	{ $current=$iv_ruleEScript.current; }
	EOF;

// Rule EScript
ruleEScript returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEScriptAccess().getEScriptAction_0(),
					$current);
			}
		)
		otherlv_1='Script'
		{
			newLeafNode(otherlv_1, grammarAccess.getEScriptAccess().getScriptKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEScriptAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_Name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEScriptRule());
					}
					set(
						$current,
						"Name",
						lv_Name_2_0,
						"org.xtext.example.robodsl.RoboDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='runs'
		{
			newLeafNode(otherlv_3, grammarAccess.getEScriptAccess().getRunsKeyword_3());
		}
		otherlv_4='as'
		{
			newLeafNode(otherlv_4, grammarAccess.getEScriptAccess().getAsKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEScriptAccess().getMainbodyMainBodyParserRuleCall_5_0());
				}
				lv_mainbody_5_0=ruleMainBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEScriptRule());
					}
					set(
						$current,
						"mainbody",
						lv_mainbody_5_0,
						"org.xtext.example.robodsl.RoboDsl.MainBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='end'
		{
			newLeafNode(otherlv_6, grammarAccess.getEScriptAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getECommentParserRuleCall_0());
		}
		this_EComment_0=ruleEComment
		{
			$current = $this_EComment_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getIfStatementParserRuleCall_1());
		}
		this_IfStatement_1=ruleIfStatement
		{
			$current = $this_IfStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getWhileStatementParserRuleCall_2());
		}
		this_WhileStatement_2=ruleWhileStatement
		{
			$current = $this_WhileStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getRepeateStatementParserRuleCall_3());
		}
		this_RepeateStatement_3=ruleRepeateStatement
		{
			$current = $this_RepeateStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getTurnLeftCmdParserRuleCall_4());
		}
		this_TurnLeftCmd_4=ruleTurnLeftCmd
		{
			$current = $this_TurnLeftCmd_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getTraceCmdParserRuleCall_5());
		}
		this_TraceCmd_5=ruleTraceCmd
		{
			$current = $this_TraceCmd_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropCmdParserRuleCall_6());
		}
		this_DropCmd_6=ruleDropCmd
		{
			$current = $this_DropCmd_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getStepCmdParserRuleCall_7());
		}
		this_StepCmd_7=ruleStepCmd
		{
			$current = $this_StepCmd_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getPickCmdParserRuleCall_8());
		}
		this_PickCmd_8=rulePickCmd
		{
			$current = $this_PickCmd_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDropMarkCmdParserRuleCall_9());
		}
		this_DropMarkCmd_9=ruleDropMarkCmd
		{
			$current = $this_DropMarkCmd_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getPickMarkCmdParserRuleCall_10());
		}
		this_PickMarkCmd_10=rulePickMarkCmd
		{
			$current = $this_PickMarkCmd_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getDestroyWallCmdParserRuleCall_11());
		}
		this_DestroyWallCmd_11=ruleDestroyWallCmd
		{
			$current = $this_DestroyWallCmd_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getBuildWallCmdParserRuleCall_12());
		}
		this_BuildWallCmd_12=ruleBuildWallCmd
		{
			$current = $this_BuildWallCmd_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMainBody
entryRuleMainBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainBodyRule()); }
	iv_ruleMainBody=ruleMainBody
	{ $current=$iv_ruleMainBody.current; }
	EOF;

// Rule MainBody
ruleMainBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMainBodyAccess().getMainBodyAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMainBodyAccess().getCommandCommandParserRuleCall_1_0_0());
					}
					lv_command_1_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainBodyRule());
						}
						add(
							$current,
							"command",
							lv_command_1_0,
							"org.xtext.example.robodsl.RoboDsl.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMainBodyAccess().getCommandCommandParserRuleCall_1_1_0());
					}
					lv_command_2_0=ruleCommand
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMainBodyRule());
						}
						add(
							$current,
							"command",
							lv_command_2_0,
							"org.xtext.example.robodsl.RoboDsl.Command");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleSubBody
entryRuleSubBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubBodyRule()); }
	iv_ruleSubBody=ruleSubBody
	{ $current=$iv_ruleSubBody.current; }
	EOF;

// Rule SubBody
ruleSubBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSubBodyAccess().getSubBodyAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubBodyAccess().getCommandCommandParserRuleCall_1_0());
				}
				lv_command_1_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubBodyRule());
					}
					add(
						$current,
						"command",
						lv_command_1_0,
						"org.xtext.example.robodsl.RoboDsl.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubBodyAccess().getCommandCommandParserRuleCall_2_0());
				}
				lv_command_2_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubBodyRule());
					}
					add(
						$current,
						"command",
						lv_command_2_0,
						"org.xtext.example.robodsl.RoboDsl.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEComment
entryRuleEComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getECommentRule()); }
	iv_ruleEComment=ruleEComment
	{ $current=$iv_ruleEComment.current; }
	EOF;

// Rule EComment
ruleEComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getECommentAccess().getECommentAction_0(),
					$current);
			}
		)
		(
			(
				lv_comment_1_0=RULE_COMMENTSTRING
				{
					newLeafNode(lv_comment_1_0, grammarAccess.getECommentAccess().getCommentCOMMENTSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getECommentRule());
					}
					setWithLastConsumed(
						$current,
						"comment",
						lv_comment_1_0,
						"org.xtext.example.robodsl.RoboDsl.COMMENTSTRING");
				}
			)
		)
	)
;

// Entry rule entryRuleTurnLeftCmd
entryRuleTurnLeftCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnLeftCmdRule()); }
	iv_ruleTurnLeftCmd=ruleTurnLeftCmd
	{ $current=$iv_ruleTurnLeftCmd.current; }
	EOF;

// Rule TurnLeftCmd
ruleTurnLeftCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTurnLeftCmdAccess().getTurnLeftCmdAction_0(),
					$current);
			}
		)
		otherlv_1='turnLeft'
		{
			newLeafNode(otherlv_1, grammarAccess.getTurnLeftCmdAccess().getTurnLeftKeyword_1());
		}
	)
;

// Entry rule entryRuleTraceCmd
entryRuleTraceCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTraceCmdRule()); }
	iv_ruleTraceCmd=ruleTraceCmd
	{ $current=$iv_ruleTraceCmd.current; }
	EOF;

// Rule TraceCmd
ruleTraceCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTraceCmdAccess().getTraceCmdAction_0(),
					$current);
			}
		)
		otherlv_1='trace'
		{
			newLeafNode(otherlv_1, grammarAccess.getTraceCmdAccess().getTraceKeyword_1());
		}
		(
			(
				lv_trace_2_0=RULE_TRACESTRING
				{
					newLeafNode(lv_trace_2_0, grammarAccess.getTraceCmdAccess().getTraceTRACESTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTraceCmdRule());
					}
					setWithLastConsumed(
						$current,
						"trace",
						lv_trace_2_0,
						"org.xtext.example.robodsl.RoboDsl.TRACESTRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDropCmd
entryRuleDropCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropCmdRule()); }
	iv_ruleDropCmd=ruleDropCmd
	{ $current=$iv_ruleDropCmd.current; }
	EOF;

// Rule DropCmd
ruleDropCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropCmdAccess().getDropCmdAction_0(),
					$current);
			}
		)
		otherlv_1='drop'
		{
			newLeafNode(otherlv_1, grammarAccess.getDropCmdAccess().getDropKeyword_1());
		}
	)
;

// Entry rule entryRuleStepCmd
entryRuleStepCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepCmdRule()); }
	iv_ruleStepCmd=ruleStepCmd
	{ $current=$iv_ruleStepCmd.current; }
	EOF;

// Rule StepCmd
ruleStepCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStepCmdAccess().getStepCmdAction_0(),
					$current);
			}
		)
		otherlv_1='step'
		{
			newLeafNode(otherlv_1, grammarAccess.getStepCmdAccess().getStepKeyword_1());
		}
	)
;

// Entry rule entryRulePickCmd
entryRulePickCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPickCmdRule()); }
	iv_rulePickCmd=rulePickCmd
	{ $current=$iv_rulePickCmd.current; }
	EOF;

// Rule PickCmd
rulePickCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPickCmdAccess().getPickCmdAction_0(),
					$current);
			}
		)
		otherlv_1='pick'
		{
			newLeafNode(otherlv_1, grammarAccess.getPickCmdAccess().getPickKeyword_1());
		}
	)
;

// Entry rule entryRuleDropMarkCmd
entryRuleDropMarkCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDropMarkCmdRule()); }
	iv_ruleDropMarkCmd=ruleDropMarkCmd
	{ $current=$iv_ruleDropMarkCmd.current; }
	EOF;

// Rule DropMarkCmd
ruleDropMarkCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDropMarkCmdAccess().getDropMarkCmdAction_0(),
					$current);
			}
		)
		otherlv_1='dropMark'
		{
			newLeafNode(otherlv_1, grammarAccess.getDropMarkCmdAccess().getDropMarkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDropMarkCmdAccess().getLocationLocationParserRuleCall_2_0());
				}
				lv_location_2_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDropMarkCmdRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.example.robodsl.RoboDsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePickMarkCmd
entryRulePickMarkCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPickMarkCmdRule()); }
	iv_rulePickMarkCmd=rulePickMarkCmd
	{ $current=$iv_rulePickMarkCmd.current; }
	EOF;

// Rule PickMarkCmd
rulePickMarkCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPickMarkCmdAccess().getPickMarkCmdAction_0(),
					$current);
			}
		)
		otherlv_1='pickMark'
		{
			newLeafNode(otherlv_1, grammarAccess.getPickMarkCmdAccess().getPickMarkKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPickMarkCmdAccess().getLocationLocationParserRuleCall_2_0());
				}
				lv_location_2_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPickMarkCmdRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.example.robodsl.RoboDsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDestroyWallCmd
entryRuleDestroyWallCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDestroyWallCmdRule()); }
	iv_ruleDestroyWallCmd=ruleDestroyWallCmd
	{ $current=$iv_ruleDestroyWallCmd.current; }
	EOF;

// Rule DestroyWallCmd
ruleDestroyWallCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDestroyWallCmdAccess().getDestroyWallCmdAction_0(),
					$current);
			}
		)
		otherlv_1='destroyWall'
		{
			newLeafNode(otherlv_1, grammarAccess.getDestroyWallCmdAccess().getDestroyWallKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDestroyWallCmdAccess().getLocationLocationParserRuleCall_2_0());
				}
				lv_location_2_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDestroyWallCmdRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.example.robodsl.RoboDsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBuildWallCmd
entryRuleBuildWallCmd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildWallCmdRule()); }
	iv_ruleBuildWallCmd=ruleBuildWallCmd
	{ $current=$iv_ruleBuildWallCmd.current; }
	EOF;

// Rule BuildWallCmd
ruleBuildWallCmd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBuildWallCmdAccess().getBuildWallCmdAction_0(),
					$current);
			}
		)
		otherlv_1='buildWall'
		{
			newLeafNode(otherlv_1, grammarAccess.getBuildWallCmdAccess().getBuildWallKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuildWallCmdAccess().getLocationLocationParserRuleCall_2_0());
				}
				lv_location_2_0=ruleLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuildWallCmdRule());
					}
					set(
						$current,
						"location",
						lv_location_2_0,
						"org.xtext.example.robodsl.RoboDsl.Location");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLocation
entryRuleLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationRule()); }
	iv_ruleLocation=ruleLocation
	{ $current=$iv_ruleLocation.current; }
	EOF;

// Rule Location
ruleLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLocationAccess().getLocationAction_0(),
					$current);
			}
		)
		otherlv_1='row:'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocationAccess().getRowKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getRowEIntegerParserRuleCall_2_0());
				}
				lv_row_2_0=ruleEInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"row",
						lv_row_2_0,
						"org.xtext.example.robodsl.RoboDsl.EInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='col:'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocationAccess().getColKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationAccess().getColEIntegerParserRuleCall_4_0());
				}
				lv_col_4_0=ruleEInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationRule());
					}
					set(
						$current,
						"col",
						lv_col_4_0,
						"org.xtext.example.robodsl.RoboDsl.EInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfStatementAccess().getIfStatementAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionmodelConditionModelParserRuleCall_2_0());
				}
				lv_conditionmodel_2_0=ruleConditionModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"conditionmodel",
						lv_conditionmodel_2_0,
						"org.xtext.example.robodsl.RoboDsl.ConditionModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='do'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getDoKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getSubbodySubBodyParserRuleCall_4_0());
				}
				lv_subbody_4_0=ruleSubBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"subbody",
						lv_subbody_4_0,
						"org.xtext.example.robodsl.RoboDsl.SubBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
			}
			otherlv_6='do'
			{
				newLeafNode(otherlv_6, grammarAccess.getIfStatementAccess().getDoKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElsebodySubBodyParserRuleCall_5_2_0());
					}
					lv_elsebody_7_0=ruleSubBody
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"elsebody",
							lv_elsebody_7_0,
							"org.xtext.example.robodsl.RoboDsl.SubBody");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='end'
		{
			newLeafNode(otherlv_8, grammarAccess.getIfStatementAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWhileStatementAccess().getWhileStatementAction_0(),
					$current);
			}
		)
		otherlv_1='while'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getWhileKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionmodelConditionModelParserRuleCall_2_0());
				}
				lv_conditionmodel_2_0=ruleConditionModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"conditionmodel",
						lv_conditionmodel_2_0,
						"org.xtext.example.robodsl.RoboDsl.ConditionModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='do'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getDoKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getSubbodySubBodyParserRuleCall_4_0());
				}
				lv_subbody_4_0=ruleSubBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"subbody",
						lv_subbody_4_0,
						"org.xtext.example.robodsl.RoboDsl.SubBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getWhileStatementAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleRepeateStatement
entryRuleRepeateStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepeateStatementRule()); }
	iv_ruleRepeateStatement=ruleRepeateStatement
	{ $current=$iv_ruleRepeateStatement.current; }
	EOF;

// Rule RepeateStatement
ruleRepeateStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRepeateStatementAccess().getRepeateStatementAction_0(),
					$current);
			}
		)
		otherlv_1='Repeat'
		{
			newLeafNode(otherlv_1, grammarAccess.getRepeateStatementAccess().getRepeatKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepeateStatementAccess().getCountEIntegerParserRuleCall_2_0());
				}
				lv_count_2_0=ruleEInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepeateStatementRule());
					}
					set(
						$current,
						"count",
						lv_count_2_0,
						"org.xtext.example.robodsl.RoboDsl.EInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='times'
		{
			newLeafNode(otherlv_3, grammarAccess.getRepeateStatementAccess().getTimesKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepeateStatementAccess().getSubbodySubBodyParserRuleCall_4_0());
				}
				lv_subbody_4_0=ruleSubBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepeateStatementRule());
					}
					set(
						$current,
						"subbody",
						lv_subbody_4_0,
						"org.xtext.example.robodsl.RoboDsl.SubBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='end'
		{
			newLeafNode(otherlv_5, grammarAccess.getRepeateStatementAccess().getEndKeyword_5());
		}
	)
;

// Entry rule entryRuleConditionModel
entryRuleConditionModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionModelRule()); }
	iv_ruleConditionModel=ruleConditionModel
	{ $current=$iv_ruleConditionModel.current; }
	EOF;

// Rule ConditionModel
ruleConditionModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConditionModelAccess().getOrCondParserRuleCall());
	}
	this_OrCond_0=ruleOrCond
	{
		$current = $this_OrCond_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrCond
entryRuleOrCond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrCondRule()); }
	iv_ruleOrCond=ruleOrCond
	{ $current=$iv_ruleOrCond.current; }
	EOF;

// Rule OrCond
ruleOrCond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrCondAccess().getLhsAndCondParserRuleCall_0_0());
				}
				lv_lhs_0_0=ruleAndCond
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrCondRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.xtext.example.robodsl.RoboDsl.AndCond");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='or'
			{
				newLeafNode(otherlv_1, grammarAccess.getOrCondAccess().getOrKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrCondAccess().getRhsOrCondParserRuleCall_1_1_0());
					}
					lv_rhs_2_0=ruleOrCond
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrCondRule());
						}
						set(
							$current,
							"rhs",
							lv_rhs_2_0,
							"org.xtext.example.robodsl.RoboDsl.OrCond");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAndCond
entryRuleAndCond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndCondRule()); }
	iv_ruleAndCond=ruleAndCond
	{ $current=$iv_ruleAndCond.current; }
	EOF;

// Rule AndCond
ruleAndCond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAndCondAccess().getLhsNotCondParserRuleCall_0_0());
				}
				lv_lhs_0_0=ruleNotCond
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndCondRule());
					}
					set(
						$current,
						"lhs",
						lv_lhs_0_0,
						"org.xtext.example.robodsl.RoboDsl.NotCond");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getAndCondAccess().getAndKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndCondAccess().getRhsAndCondParserRuleCall_1_1_0());
					}
					lv_rhs_2_0=ruleAndCond
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndCondRule());
						}
						set(
							$current,
							"rhs",
							lv_rhs_2_0,
							"org.xtext.example.robodsl.RoboDsl.AndCond");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNotCond
entryRuleNotCond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotCondRule()); }
	iv_ruleNotCond=ruleNotCond
	{ $current=$iv_ruleNotCond.current; }
	EOF;

// Rule NotCond
ruleNotCond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_not_0_0='not'
				{
					newLeafNode(lv_not_0_0, grammarAccess.getNotCondAccess().getNotNotKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNotCondRule());
					}
					setWithLastConsumed($current, "not", true, "not");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getNotCondAccess().getBracketsBracketsCondParserRuleCall_1_0());
				}
				lv_brackets_1_0=ruleBracketsCond
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotCondRule());
					}
					set(
						$current,
						"brackets",
						lv_brackets_1_0,
						"org.xtext.example.robodsl.RoboDsl.BracketsCond");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBracketsCond
entryRuleBracketsCond returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBracketsCondRule()); }
	iv_ruleBracketsCond=ruleBracketsCond
	{ $current=$iv_ruleBracketsCond.current; }
	EOF;

// Rule BracketsCond
ruleBracketsCond returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getBracketsCondAccess().getLeftParenthesisKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBracketsCondAccess().getOrcondOrCondParserRuleCall_0_1_0());
					}
					lv_orcond_1_0=ruleOrCond
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBracketsCondRule());
						}
						set(
							$current,
							"orcond",
							lv_orcond_1_0,
							"org.xtext.example.robodsl.RoboDsl.OrCond");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getBracketsCondAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getBracketsCondAccess().getConditionConditionParserRuleCall_1_0());
				}
				lv_condition_3_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBracketsCondRule());
					}
					set(
						$current,
						"condition",
						lv_condition_3_0,
						"org.xtext.example.robodsl.RoboDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConditionAccess().getFullParserRuleCall_0());
		}
		this_Full_0=ruleFull
		{
			$current = $this_Full_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getMarkParserRuleCall_1());
		}
		this_Mark_1=ruleMark
		{
			$current = $this_Mark_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getWallAheadParserRuleCall_2());
		}
		this_WallAhead_2=ruleWallAhead
		{
			$current = $this_WallAhead_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConditionAccess().getHeadingParserRuleCall_3());
		}
		this_Heading_3=ruleHeading
		{
			$current = $this_Heading_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFull
entryRuleFull returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFullRule()); }
	iv_ruleFull=ruleFull
	{ $current=$iv_ruleFull.current; }
	EOF;

// Rule Full
ruleFull returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFullAccess().getConditionAction_0(),
					$current);
			}
		)
		otherlv_1='full'
		{
			newLeafNode(otherlv_1, grammarAccess.getFullAccess().getFullKeyword_1());
		}
	)
;

// Entry rule entryRuleMark
entryRuleMark returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarkRule()); }
	iv_ruleMark=ruleMark
	{ $current=$iv_ruleMark.current; }
	EOF;

// Rule Mark
ruleMark returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMarkAccess().getConditionAction_0(),
					$current);
			}
		)
		otherlv_1='mark'
		{
			newLeafNode(otherlv_1, grammarAccess.getMarkAccess().getMarkKeyword_1());
		}
	)
;

// Entry rule entryRuleWallAhead
entryRuleWallAhead returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWallAheadRule()); }
	iv_ruleWallAhead=ruleWallAhead
	{ $current=$iv_ruleWallAhead.current; }
	EOF;

// Rule WallAhead
ruleWallAhead returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWallAheadAccess().getConditionAction_0(),
					$current);
			}
		)
		otherlv_1='wall'
		{
			newLeafNode(otherlv_1, grammarAccess.getWallAheadAccess().getWallKeyword_1());
		}
		otherlv_2='ahead'
		{
			newLeafNode(otherlv_2, grammarAccess.getWallAheadAccess().getAheadKeyword_2());
		}
	)
;

// Entry rule entryRuleHeading
entryRuleHeading returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeadingRule()); }
	iv_ruleHeading=ruleHeading
	{ $current=$iv_ruleHeading.current; }
	EOF;

// Rule Heading
ruleHeading returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHeadingAccess().getConditionAction_0(),
					$current);
			}
		)
		otherlv_1='heading'
		{
			newLeafNode(otherlv_1, grammarAccess.getHeadingAccess().getHeadingKeyword_1());
		}
		(
			otherlv_2='north'
			{
				newLeafNode(otherlv_2, grammarAccess.getHeadingAccess().getNorthKeyword_2_0());
			}
			    |
			otherlv_3='east'
			{
				newLeafNode(otherlv_3, grammarAccess.getHeadingAccess().getEastKeyword_2_1());
			}
			    |
			otherlv_4='south'
			{
				newLeafNode(otherlv_4, grammarAccess.getHeadingAccess().getSouthKeyword_2_2());
			}
			    |
			otherlv_5='west'
			{
				newLeafNode(otherlv_5, grammarAccess.getHeadingAccess().getWestKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleEInteger
entryRuleEInteger returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntegerRule()); }
	iv_ruleEInteger=ruleEInteger
	{ $current=$iv_ruleEInteger.current.getText(); }
	EOF;

// Rule EInteger
ruleEInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getEIntegerAccess().getINTTerminalRuleCall());
	}
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_TRACESTRING : '"' ~('"')* '"';

RULE_COMMENTSTRING : '#' ~('\n')* '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
